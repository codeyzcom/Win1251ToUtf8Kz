#include <cstdio>
#include <cstdlib>
#include <cstdint>
#include <clocale>
#include <cstring>


const uint8_t CP1251UTF8[128][4] =
        {
                {2, 0xD0, 0x82, 0x0},
                {2, 0xD0, 0x83, 0x0},
                {3, 0xE2, 0x80, 0x9A},
                {2, 0xD1, 0x93, 0x0},
                {3, 0xE2, 0x80, 0x9E},
                {3, 0xE2, 0x80, 0xA6},
                {3, 0xE2, 0x80, 0xA0},
                {3, 0xE2, 0x80, 0xA1},
                {3, 0xE2, 0x82, 0xAC},
                {3, 0xE2, 0x80, 0xB0},
                {2, 0xD0, 0x89, 0x0},
                {3, 0xE2, 0x80, 0xB9},
                {2, 0xD0, 0x8A, 0x0},
                {2, 0xD2, 0x9A, 0x0},
                {2, 0xD2, 0xBA, 0x0},
                {2, 0xD0, 0x8F, 0x0},
                {2, 0xD1, 0x92, 0x0},
                {3, 0xE2, 0x80, 0x98},
                {3, 0xE2, 0x80, 0x99},
                {3, 0xE2, 0x80, 0x9C},
                {3, 0xE2, 0x80, 0x9D},
                {3, 0xE2, 0x80, 0xA2},
                {3, 0xE2, 0x80, 0x93},
                {3, 0xE2, 0x80, 0x94},
                {2, 0xC2, 0x98, 0x0},
                {3, 0xE2, 0x84, 0xA2},
                {2, 0xD1, 0x99, 0x0},
                {3, 0xE2, 0x80, 0xBA},
                {2, 0xD1, 0x9A, 0x0},
                {2, 0xD2, 0x9B, 0x0},
                {2, 0xD2, 0xBB, 0x0},
                {2, 0xD1, 0x9F, 0x0},
                {2, 0xC2, 0xA0, 0x0},
                {2, 0xD2, 0xB0, 0x0},
                {2, 0xD2, 0xB1, 0x0},
                {2, 0xD3, 0x98, 0x0},
                {2, 0xC2, 0xA4, 0x0},
                {2, 0xD3, 0xA8, 0x0},
                {2, 0xC2, 0xA6, 0x0},
                {2, 0xC2, 0xA7, 0x0},
                {2, 0xD0, 0x81, 0x0},
                {2, 0xC2, 0xA9, 0x0},
                {2, 0xD2, 0x92, 0x0},
                {2, 0xC2, 0xAB, 0x0},
                {2, 0xC2, 0xAC, 0x0},
                {2, 0xC2, 0xAD, 0x0},
                {2, 0xC2, 0xAE, 0x0},
                {2, 0xD2, 0xAE, 0x0},
                {2, 0xC2, 0xB0, 0x0},
                {2, 0xC2, 0xB1, 0x0},
                {2, 0xD0, 0x86, 0x0},
                {2, 0xD1, 0x96, 0x0},
                {2, 0xD3, 0xA9, 0x0},
                {2, 0xC2, 0xB5, 0x0},
                {2, 0xC2, 0xB6, 0x0},
                {2, 0xC2, 0xB7, 0x0},
                {2, 0xD1, 0x91, 0x0},
                {3, 0xE2, 0x84, 0x96},
                {2, 0xD2, 0x93, 0x0},
                {2, 0xC2, 0xBB, 0x0},
                {2, 0xD3, 0x99, 0x0},
                {2, 0xD2, 0xA2, 0x0},
                {2, 0xD2, 0xA3, 0x0},
                {2, 0xD2, 0xAF, 0x0},
                {2, 0xD0, 0x90, 0x0},
                {2, 0xD0, 0x91, 0x0},
                {2, 0xD0, 0x92, 0x0},
                {2, 0xD0, 0x93, 0x0},
                {2, 0xD0, 0x94, 0x0},
                {2, 0xD0, 0x95, 0x0},
                {2, 0xD0, 0x96, 0x0},
                {2, 0xD0, 0x97, 0x0},
                {2, 0xD0, 0x98, 0x0},
                {2, 0xD0, 0x99, 0x0},
                {2, 0xD0, 0x9A, 0x0},
                {2, 0xD0, 0x9B, 0x0},
                {2, 0xD0, 0x9C, 0x0},
                {2, 0xD0, 0x9D, 0x0},
                {2, 0xD0, 0x9E, 0x0},
                {2, 0xD0, 0x9F, 0x0},
                {2, 0xD0, 0xA0, 0x0},
                {2, 0xD0, 0xA1, 0x0},
                {2, 0xD0, 0xA2, 0x0},
                {2, 0xD0, 0xA3, 0x0},
                {2, 0xD0, 0xA4, 0x0},
                {2, 0xD0, 0xA5, 0x0},
                {2, 0xD0, 0xA6, 0x0},
                {2, 0xD0, 0xA7, 0x0},
                {2, 0xD0, 0xA8, 0x0},
                {2, 0xD0, 0xA9, 0x0},
                {2, 0xD0, 0xAA, 0x0},
                {2, 0xD0, 0xAB, 0x0},
                {2, 0xD0, 0xAC, 0x0},
                {2, 0xD0, 0xAD, 0x0},
                {2, 0xD0, 0xAE, 0x0},
                {2, 0xD0, 0xAF, 0x0},
                {2, 0xD0, 0xB0, 0x0},
                {2, 0xD0, 0xB1, 0x0},
                {2, 0xD0, 0xB2, 0x0},
                {2, 0xD0, 0xB3, 0x0},
                {2, 0xD0, 0xB4, 0x0},
                {2, 0xD0, 0xB5, 0x0},
                {2, 0xD0, 0xB6, 0x0},
                {2, 0xD0, 0xB7, 0x0},
                {2, 0xD0, 0xB8, 0x0},
                {2, 0xD0, 0xB9, 0x0},
                {2, 0xD0, 0xBA, 0x0},
                {2, 0xD0, 0xBB, 0x0},
                {2, 0xD0, 0xBC, 0x0},
                {2, 0xD0, 0xBD, 0x0},
                {2, 0xD0, 0xBE, 0x0},
                {2, 0xD0, 0xBF, 0x0},
                {2, 0xD1, 0x80, 0x0},
                {2, 0xD1, 0x81, 0x0},
                {2, 0xD1, 0x82, 0x0},
                {2, 0xD1, 0x83, 0x0},
                {2, 0xD1, 0x84, 0x0},
                {2, 0xD1, 0x85, 0x0},
                {2, 0xD1, 0x86, 0x0},
                {2, 0xD1, 0x87, 0x0},
                {2, 0xD1, 0x88, 0x0},
                {2, 0xD1, 0x89, 0x0},
                {2, 0xD1, 0x8A, 0x0},
                {2, 0xD1, 0x8B, 0x0},
                {2, 0xD1, 0x8C, 0x0},
                {2, 0xD1, 0x8D, 0x0},
                {2, 0xD1, 0x8E, 0x0},
                {2, 0xD1, 0x8F, 0x0}
        };


int main(int argc, char *argv[]) {
    if (argc!=3) {
        printf("command %s <input_file> <output_file>", argv[0]);
        return EXIT_FAILURE;
    }

    FILE *fin = fopen(argv[1], "rb");
    if(!fin) {
        perror("File opening failed\n");
        return EXIT_FAILURE;
    }

    FILE *fout = fopen(argv[2], "w+b");
    if(!fout) {
        perror("File creation failed\n");
        return EXIT_FAILURE;
    }
    auto *  src= reinterpret_cast<unsigned char *>((char *) malloc(2 * sizeof(char)));
    memset(src,0,2*sizeof(char));
    auto * dest= reinterpret_cast<unsigned char *>((char *) malloc(5 * sizeof(char)));
    memset(dest,0,5*sizeof(char));
    size_t dstlen=1;

    dstlen=3;
    dest[0] = 0xEF;
    dest[1] = 0xBB;
    dest[2] = 0xBF;
    fwrite(dest,1,dstlen,fout);

    while (fread((char*) src,sizeof(char),1,fin)>0) {
        memset(dest,0,5*sizeof(char));
        if (src[0]>127) {
            const uint8_t *s= CP1251UTF8[(uint8_t) (src[0]-128)];
            dstlen=s[0];
            dest[0] = s[1];
            dest[1] = s[2];
            if(dstlen>2)
                dest[2] =  s[3];
        } else {
            dest[0]=src[0];
            dstlen=1;
        }

        fwrite(dest,1,dstlen,fout);
    }
    fclose(fin);
    fclose(fout);
    return EXIT_SUCCESS;
}